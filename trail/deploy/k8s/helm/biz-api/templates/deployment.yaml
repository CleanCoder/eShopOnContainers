{{- if .Values.deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "standard-chart.common.metadataLabels" $ | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.deployment.revision_history_limit | default 5 }}
  progressDeadlineSeconds: {{ .Values.deployment.progress_deadline_seconds | default 600 }}
  {{- if .Values.deployment.replicas }}
  replicas: {{ .Values.deployment.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.app_name }}
  strategy:
    rollingUpdate:
    {{- if .Values.deployment.rolling_update }}
      {{- with .Values.deployment.rolling_update }}
      maxSurge: {{ .max_surge }}
      maxUnavailable: {{ .max_unavailable }}
      {{- end }}
    {{- else }}
      maxSurge: 50%
      maxUnavailable: 25%
    {{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "standard-chart.common.metadataLabels" $ | nindent 8 }}
      {{- if .Values.deployment.annotations }}
      annotations:
         {{- range $key, $val := .Values.deployment.annotations }}
         {{ $key }}: {{ $val | quote }}
         {{- end }}
      {{- end }}
    spec:
      {{- if .Values.image.registry }}
      imagePullSecrets:
      - name: {{ .Values.image.registry.secretName }}
      {{- end }}
      {{- if .Values.deployment.initContainers }}
      initContainers:
      {{- range $key, $value := .Values.deployment.initContainers }}
      - name: {{ .name }}
        image: {{ .image }}
        command: {{ .command }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.app_name }}
          image: "{{ template "fqdn-image" . }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
          {{- if .Values.deployment.http.container_ports }}
          {{- range $containerPort := .Values.deployment.http.container_ports }}
          - containerPort: {{ $containerPort.port }}
          {{- if $containerPort.name }}
            name: {{ $containerPort.name }}
          {{- end }}
          {{- end }} 
          {{- end }}
          {{- if .Values.deployment.http.container_port }}
          - containerPort: {{ .Values.deployment.http.container_port }}
          {{- end }}
          env:
            - name: k8sname
              value: {{ .Values.clusterName }}
          {{- if .Values.deployment.env }} 
          {{- range .Values.deployment.env }}
          - name: {{.name}}
            value: {{.value}}
          {{- end }} 
          {{- end }}
          envFrom:
          {{- if .Values.configmap }}
          - configMapRef:
              name: {{ .Values.app_name }}
          {{- end }}
          {{- if or .Values.secrets .Values.secret }}
          - secretRef:
              name: {{ .Values.app_name }}
          {{- end }}
          {{- if .Values.deployment.liveness }}
          {{- with .Values.deployment.liveness }}
          livenessProbe:
            failureThreshold: {{ .failure_threshold | default 3 }}
            {{- if .commands }}
            exec:
              command:
              {{- range $command := .commands }}
              - {{ $command | default "whoami" | quote }}
              {{- end }}
            {{- else }}
            httpGet:
              path: {{ .path | default "/liveness" }}
              port: {{ .healthcheck_port | default 80 }}
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: {{ .initial_delay_seconds | default 5 }}
            periodSeconds: {{ .period_seconds | default 30 }}
            successThreshold: {{ .success_threshold | default 1 }}
            timeoutSeconds: {{ .timeout_seconds | default 1 }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.readiness }}
          {{- with .Values.deployment.readiness }}
          readinessProbe:
            failureThreshold: {{ .failure_threshold | default 3 }}
            {{- if .commands }}
            exec:
              command:
              {{- range $command := .commands }}
              - {{ $command | default "whoami" | quote }}
              {{- end }}
            {{- else }}
            httpGet:
              path: {{ .path | default "/hc" }}
              port: {{ .healthcheck_port | default 80 }}
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: {{ .initial_delay_seconds | default 5 }}
            periodSeconds: {{ .period_seconds | default 30 }}
            successThreshold: {{ .success_threshold | default 1 }}
            timeoutSeconds: {{ .timeout_seconds | default 1 }}
          {{- end }}
          {{- end }}
          {{- with .Values.deployment.resources }}
          resources:
            limits:
              cpu: {{ .limits.cpu | default "225m" }}
              memory: {{ .limits.memory |default "350Mi" }}
            requests:
              cpu: {{ .requests.cpu | default "150m" }}
              memory: {{ .requests.memory | default "250Mi" }}
          {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .Values.deployment.volume }}
          volumeMounts:
          - name: {{ .Values.app_name }}
            mountPath: {{ .Values.deployment.volume.mount_path }}
        volumes:
        - name: {{ .Values.app_name }}
          persistentVolumeClaim:
            claimName: {{ .Values.app_name }}
        {{- end }}
{{- end }}